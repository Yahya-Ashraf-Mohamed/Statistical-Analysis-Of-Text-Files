Index: Statistical-Analysis-Of-Text-Files-main/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Statistical-Analysis-Of-Text-Files-main/.idea/.gitignore b/Statistical-Analysis-Of-Text-Files-main/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1670722680866)
+++ b/Statistical-Analysis-Of-Text-Files-main/.idea/.gitignore	(date 1670722680866)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: Statistical-Analysis-Of-Text-Files-main/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Statistical-Analysis-Of-Text-Files-main/.idea/misc.xml b/Statistical-Analysis-Of-Text-Files-main/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1670722680899)
+++ b/Statistical-Analysis-Of-Text-Files-main/.idea/misc.xml	(date 1670722680899)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: Statistical-Analysis-Of-Text-Files-main/.idea/Project.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Statistical-Analysis-Of-Text-Files-main/.idea/Project.iml b/Statistical-Analysis-Of-Text-Files-main/.idea/Project.iml
new file mode 100644
--- /dev/null	(date 1670722680887)
+++ b/Statistical-Analysis-Of-Text-Files-main/.idea/Project.iml	(date 1670722680887)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/venv" />
+    </content>
+    <orderEntry type="jdk" jdkName="Python 3.10" jdkType="Python SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: venv/Functions.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venv/Functions.py b/venv/Functions.py
new file mode 100644
--- /dev/null	(date 1670687013267)
+++ b/venv/Functions.py	(date 1670687013267)
@@ -0,0 +1,86 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+def OpenFile(FileName):
+
+    try:
+        FileHandel = open(FileName)
+        print('File opened Successfully!')
+        text = FileHandel.read()
+        return text
+    except:
+        print(FileName," Can't be opened!")
+        quit()
+
+def CreateDictionary():
+    Characters = dict()
+    text = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',
+            'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
+            'w', 'x', 'y', 'z',
+            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',
+            'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
+            'W', 'X', 'Y', 'Z',
+            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
+    for char in text:
+        Characters[char] = Characters.get(char, 0)
+    return Characters
+
+def Create_CharacterConverter_Dictionary():
+    CharacterConverter = dict()
+    text = ['a', 'A', 'b', 'B', 'c', 'C', 'd', 'D', 'e', 'E', 'f', 'F',
+            'g', 'G', 'h', 'H', 'i', 'I', 'j', 'J', 'k', 'K', 'L', 'l',
+            'm', 'M', 'n', 'N', 'o', 'O', 'p', 'P', 'q', 'Q', 'r', 'R',
+            's', 'S', 't', 'T', 'u', 'U', 'v', 'V', 'w', 'W', 'x', 'X',
+            'y', 'Y', 'z','Z']
+    i = 0
+    for char in text:
+        CharacterConverter[char] = CharacterConverter.get(char, 10) + i
+        i = i + 1
+    return CharacterConverter
+
+
+def Count (FileHandel, CharactersDic):
+    words = FileHandel.split()
+    for word in words:
+        for char in word:
+            CharactersDic[char] = CharactersDic.get(char,0) + 1
+    "print (CharactersDic)" '''For debugging purpose'''
+
+def SortRepetedChar(CharactersDic):
+    lst = list()
+    for key, value in CharactersDic.items():
+        newTuple = (value, key)
+        lst.append(newTuple)
+
+    lst = sorted(lst, reverse=True)
+    return lst
+    "print(sorted( [(value,key) for key,value in CharactersDic.items()] , reverse = True) [:NoMostReperted])"
+
+def PrintMostRepetedChar(NoMostReperted, MostRepetedCharList):
+    for value, key in MostRepetedCharList[:NoMostReperted]:
+        print(key, ": ", value)
+
+
+
+def PlotMostRepetedChar(NoMostReperted, SortedCharList):
+    for value, key in SortedCharList[:NoMostReperted]:
+        plt.bar(key, value)
+    plt.xlabel("Charcters")
+    plt.ylabel("No. Repeted")
+    plt.show()
+
+def PlotAllChar(SortedCharList):
+    for value, key in SortedCharList:
+        plt.bar(key, value)
+    plt.xlabel("Charcters")
+    plt.ylabel("No. Repeted")
+    plt.show()
+
+
+def ConvertCharToNum(CharactersDic, CharacterConverter):
+    data = []
+    for value, key in CharactersDic:
+        print(value,key)
+        if (key in CharacterConverter):
+            data.append((value * CharacterConverter[key]))
+    return data
\ No newline at end of file
Index: venv/Sample Text.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venv/Sample Text.txt b/venv/Sample Text.txt
new file mode 100644
--- /dev/null	(date 1670622693192)
+++ b/venv/Sample Text.txt	(date 1670622693192)
@@ -0,0 +1,36 @@
+Top 10 Smartphone Usage Statistics UK:
+1- 87% of adults in the UK owned smartphones in 2020.
+2- The mobile internet penetration rate in the UK was 72% in 2020.
+3- An average person in the UK spends 148 minutes on a smartphone.
+4- Smartphones make up to 47.3% of online traffic in the UK.
+5- The UK has the second-highest smartphone penetration rate in the world at 78.9%.
+6- Email correspondence using a mobile phone was the most frequent activity among internet services in the UK. 
+7- In January 2021, 97.5% of people in the UK used a smartphone to access their social media platforms.
+8- 46% of people in the survey said that they use smartphones more than before Pandemic.
+9- 100% of people in Generation Z use mobile phones.
+10- As of 2021, 54.79% of the mobile vendor market share in the UK belongs to Apple.
+
+A recent Pew Report (Mobile Fact Sheet – 5 February, 2018) shared some great data on the devices the US population are using. It is shown that by early 2018, 95% of the US population had a mobile phone, with nearly 80% of the population having a smartphone.
+
+Several key trends are clear and important.
+
+1. Mobile phones are ubiquitous – nearly everybody has one.
+2. Smartphones are really common, but over one-fifth of the population does NOT have one.
+3. The ownership and use of desktop/laptop computers has plateaued at about 70-75%.
+4. Tablets are still growing, and may overtake desktop/laptop computers soon.
+5. E-readers seem to be stuck at 20% of the population – and perhaps that will fall when the ones currently in use break?
+
+Digging into the data
+The report from Pew has some great nuggets relating to differences by groups. For example, smartphone ownership amongst the over 65 year olds is less than 50% (46%). Ownership of smartphones is over 90% for the under thirties, college graduates, and those earning over $75,000 a year.
+
+The report highlights a very important group for market researchers, people who have a smartphone but who do not have broadband at home, i.e. they are unlikely to be able to take surveys on a desktop/laptop computer. Across the whole population this group is just 12% of the population. But amongst some groups the figure is considerably higher:
+
+1- Did not graduate high school, 27%
+2- Hispanic, 23%
+3- Earns less than $30,000 a year, 21%
+4- 18 to 29 years old, 17%
+
+Lessons for other countries?
+This data is from the USA and highlights trends that are common in many other countries. For example, mobile phones are becoming ubiquitous, smartphones are common but (in most countries) not everybody has one, smartphones are outstripping desktop/laptop computers (and tablets are catching up too). However, in many countries, the dependence on smartphones is much higher than in the USA.
+
+The main message is that the mid-term future for market research is smartphone, but in the short-term, remember that not everybody has one. As for the long term, we have no idea what the next generation of devices after smartphones will be.
\ No newline at end of file
Index: venv/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venv/main.py b/venv/main.py
new file mode 100644
--- /dev/null	(date 1670718657468)
+++ b/venv/main.py	(date 1670718657468)
@@ -0,0 +1,145 @@
+import Functions
+from tkinter import *
+
+"""import PySimpleGUI as GUI
+import os.path"""
+
+def GetInputFile():
+    # Browse for input file then print its name in the text box
+    Output_Label = Label(root, text=input_TextBox.get())
+    Output_Label.grid(row=2, column=0)
+
+if __name__ == "__main__":
+
+    root = Tk()
+
+    # Create a Label widget
+    input_TextBox = Entry(root, width=50, borderwidth=5, bg="White", fg="Black")
+    input_TextBox.insert(0, "Choose the file you want to analysis")
+    #Output_Label = Label(root, text="Label box will be here!")
+
+    # Create Buttons
+    button_Choose_File = Button(root, text="Browse File", state=ACTIVE, padx=15, pady=2, fg="blue", command=GetInputFile)
+    button_Exit = Button(root, text="Exit Program", state=ACTIVE, padx=5, pady=2, command=root.quit)
+    button_PMF = Button(root, text="PMF", state=DISABLED, padx=10, pady=5, fg="Green")
+    button_CDF = Button(root, text="CDF", state=DISABLED, padx=10, pady=5, fg="#AA336A")  # dark pink
+    button_Mean = Button(root, text="Mean", state=DISABLED, padx=10, pady=5, fg="orange")
+    button_Variance = Button(root, text="Variance", state=DISABLED, padx=10, pady=5, fg="#8B8000")  # dark yellow
+    button_Skewness = Button(root, text="Skewness", state=DISABLED, padx=10, pady=5, fg="purple")
+    button_kurtosis = Button(root, text="kurtosis", state=DISABLED, padx=10, pady=5, fg="Black")
+
+    # Shoving it into the screen
+    input_TextBox.grid(row=0, column=0)
+    #Output_Label.grid(row=2, column=0)
+
+    C = 20
+    for i in range(1, C):
+        Label(root, text=" ").grid(row=0, column=C)
+
+    button_Choose_File.grid(row=0, column=4)
+    button_Exit.grid(row=0, column=6)
+
+    button_PMF.grid(row=3, column=6)
+    Label(root, text=" ").grid(row=4, column=6)
+
+    button_CDF.grid(row=8, column=6)
+    Label(root, text=" ").grid(row=9, column=6)
+
+    button_Mean.grid(row=13, column=6)
+    Label(root, text=" ").grid(row=14, column=6)
+
+    button_Variance.grid(row=18, column=6)
+    Label(root, text=" ").grid(row=19, column=6)
+
+    button_Skewness.grid(row=23, column=6)
+    Label(root, text=" ").grid(row=24, column=6)
+
+    button_kurtosis.grid(row=28, column=6)
+    Label(root, text=" ").grid(row=29, column=6)
+
+    # Generate main loop
+    root.mainloop()
+
+"""
+    file_Data_Column = \
+        [
+            [
+                GUI.Text("Import File"),
+                GUI.In(size=(25, 1), enable_events=True, key="-FILE-"),
+                GUI.FileBrowse(),
+            ],
+            [
+                GUI.Listbox
+                (
+                    values=[], enable_events=True, size=(40,20),
+                    key="-INPUT FILE-"
+                )
+            ],
+        ]
+
+    # Analytical data shown in the box
+    Buttons_column = \
+        [
+            [
+
+
+            ],
+        ]
+    # ---- full layout ----
+    layout = \
+        [
+            [
+                GUI.Column(file_Data_Column),
+                GUI.VSeperator(),
+                GUI.Column(Buttons_column),
+            ]
+        ]
+
+    # Create the Window
+    Window = GUI.Window("STATISTICAL ANALYSIS OF TEXT FILES", layout)
+
+    # Create an event loop
+    while True:
+        event, value = Window.read()
+        # End program if user closes window or
+        # presses the Exit button
+        if event == "Exit" or event == GUI.WIN_CLOSED:
+            break
+
+        # File was chosen
+        if event == "-FILE-":
+            try:
+                file = value["-FILE-"]
+            except:
+                file = []
+
+    Window.close()
+"""
+
+"""
+    "1) Open file"
+    FileName = input("Enter Your File Name: ")
+    FileName = "ST.txt"
+    Text = Functions.OpenFile(FileName)
+
+    "2) Create Dictionary"
+    CharactersDic = Functions.CreateDictionary()
+    CharacterConverter = Functions.Create_CharacterConverter_Dictionary()
+
+    "3) Count Characters"
+    print("Counting...")
+    Functions.Count(Text, CharactersDic)
+
+    "4) User Enter Number of letters most repeted"
+    NoMostReperted = int( input("Enter the number of most repeted letters you want: "))
+    SortedCharList = Functions.SortRepetedChar(CharactersDic)
+    Functions.PrintMostRepetedChar(NoMostReperted, SortedCharList)
+
+    "5) Plot most repeted letters"
+    Functions.PlotMostRepetedChar(NoMostReperted, SortedCharList)
+    Functions.PlotAllChar(SortedCharList)
+
+    "6) Change letters to equivalent number for calculations and create array"
+    data = Functions.ConvertCharToNum(SortedCharList, CharacterConverter)
+    "print(data)" '''For debugging purpose'''
+"""
Index: Statistical-Analysis-Of-Text-Files-main/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Statistical-Analysis-Of-Text-Files-main/.idea/modules.xml b/Statistical-Analysis-Of-Text-Files-main/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1670722680899)
+++ b/Statistical-Analysis-Of-Text-Files-main/.idea/modules.xml	(date 1670722680899)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/Project.iml" filepath="$PROJECT_DIR$/.idea/Project.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: Statistical-Analysis-Of-Text-Files-main/.idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Statistical-Analysis-Of-Text-Files-main/.idea/inspectionProfiles/profiles_settings.xml b/Statistical-Analysis-Of-Text-Files-main/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1670722680946)
+++ b/Statistical-Analysis-Of-Text-Files-main/.idea/inspectionProfiles/profiles_settings.xml	(date 1670722680946)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: Statistical-Analysis-Of-Text-Files-main/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Statistical-Analysis-Of-Text-Files-main/.idea/vcs.xml b/Statistical-Analysis-Of-Text-Files-main/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1670722819292)
+++ b/Statistical-Analysis-Of-Text-Files-main/.idea/vcs.xml	(date 1670722819292)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: Statistical-Analysis-Of-Text-Files-main/.idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Statistical-Analysis-Of-Text-Files-main/.idea/inspectionProfiles/Project_Default.xml b/Statistical-Analysis-Of-Text-Files-main/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	(date 1670722680930)
+++ b/Statistical-Analysis-Of-Text-Files-main/.idea/inspectionProfiles/Project_Default.xml	(date 1670722680930)
@@ -0,0 +1,12 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="PyUnresolvedReferencesInspection" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="ignoredIdentifiers">
+        <list>
+          <option value="sklearn.metrics.jaccard_similarity_score" />
+        </list>
+      </option>
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
